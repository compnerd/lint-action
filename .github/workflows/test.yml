name: Test

on:
  - push
  - pull_request

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      # Go

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      # TODO: Remove step once actions/setup-go adds $GOPATH/bin to $PATH by default
      # See https://github.com/actions/setup-go/issues/14
      - name: Add Go to $PATH
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"

      - name: Install Go dependencies
        run: |
          cd ./test/linters/projects/golint
          go get -u golang.org/x/lint/golint

      # Node.js

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: |
          cd ./test/linters/projects/eslint/
          yarn install
          cd ../eslint-typescript/
          yarn install
          cd ../prettier/
          yarn install
          cd ../stylelint/
          yarn install
          cd ../xo/
          yarn install

      # Python

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          cd ./test/linters/projects/
          pip install -r ./black/requirements.txt -r ./flake8/requirements.txt -r ./mypy/requirements.txt

      # Ruby

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install Ruby dependencies
        run: |
          gem install bundler
          cd ./test/linters/projects/rubocop/
          bundle install

      # Swift (only on macOS)

      - name: Install Swift dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          # Because swift-format requires a matching toolchain, use the OSS
          # toolchain to ensure that we are using a known revision of the
          # toolchain which should enable the use of swift-format for testing.
          curl -OL https://swift.org/builds/swift-5.2.1-release/xcode/swift-5.2.1-RELEASE/swift-5.2.1-RELEASE-osx.pkg
          sudo installer -verbose -pkg "${PWD}/swift-5.2.1-RELEASE-osx.pkg" -target /
          export TOOLCHAINS=swift

          brew update
          brew install mint

          cd ./test/linters/projects/swiftformat/
          mint bootstrap --link

          cd ../swiftlint/
          mint bootstrap --link

          cd ../swift-format
          brew install swift-format

      # Tests

      - name: Run tests
        run: |
          yarn
          yarn test
